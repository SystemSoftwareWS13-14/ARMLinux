#!/bin/bash
# Helper script for the arm linux kernel and quemu.

DEFAULT_CMD=emulate

compile()
{
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- -j4
}

emulate()
{
	IMGPATH="arch/arm/boot/zImage"
	QEMU_AUDIO_DRV=none qemu-system-arm -kernel $IMGPATH \
	-M vexpress-a9 \
	-nographic -append "console=ttyAMA0"

	# -nographic: Redirect output (inclusive serial) to command line
	# -serial: Redirect serial port (standard is stdio)
	# -append "rdinit=/bin/sh" to start shell from initramfs (not /init)
}

emulateIMG()
{
	
	IMGPATH="arch/arm/boot/zImage"
	ROOTFSPATH="../busybox-1.21.1/rootfs.cpio"
        QEMU_AUDIO_DRV=none qemu-system-arm -kernel $IMGPATH \
        -M vexpress-a9 \
        -nographic \
	-initrd $ROOTFSPATH \
	-append "rdinit=/sbin/init console=ttyAMA0" \
	-net nic,macaddr=00:00:00:00:00:1B -net vde,sock=/tmp/vde2-tap0.ctl
}

config()
{
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- menuconfig
}

clean()
{
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- clean
}

defconfig()
{
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- vexpress_defconfig
}

usage()
{
	echo "Usage $0 [-c <command>]" 1>&2
	echo -e "-c:\t\tCommand to execute:" 1>&2
	echo -e "\t\tcompile, emulate, config, clean, defconfig" 1>&2
	echo -e "\t\t(Default is -c emulate)" 1>&2
	exit 1
}

if [ $# -eq 0 ]
then
	command=$DEFAULT_CMD
fi

while getopts ":c:h" opt; do
	case $opt in
		c)
			command=$OPTARG
			;;
		h)
			usage
			;;
		:)
			echo "Option requires an argument."
			usage
			;;
		?)
			echo "Invalid option."
			usage
			;;
		*)
			echo "Unimplemented option."
			command=$DEFAULT_CMD
			;;
	esac
done
shift $(($OPTIND - 1))

if [ -z $command ]
then
	command=$DEFAULT_CMD
fi

echo "Running $command"

$command
